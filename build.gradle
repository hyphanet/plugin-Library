buildscript {
    dependencies {
        classpath files('gradle/gradle-witness.jar')
    }
}

apply plugin: 'java'
apply plugin: 'witness'
apply plugin: 'maven-publish'
apply plugin: 'application'

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

version = "37"

repositories {
    maven { url "http://4thline.org/m2" }
    maven { url 'https://mvn.freenetproject.org' }
    jcenter()
}

configurations {
    extraLibs
}

dependencies {
    compile group: 'org.freenetproject', name: 'fred', version: 'build+'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.5'
    testImplementation 'junit:junit:4.13'
}

dependencyVerification {
    verify = [
        'org.freenetproject:fred:a181e584a055211ebbe69657a89f8e1452a5eb72af441839208223dc6515cbce',
        'org.yaml:snakeyaml:9cf5e385cea2aaa58eb943a6a63c3a674d9ba00d88eca480548294d93c7b85c0',
        'org.bouncycastle:bcprov-jdk15on:1c31e44e331d25e46d293b3e8ee2d07028a67db011e74cb2443285aed1d59c85',
        'net.java.dev.jna:jna-platform:f1d00c167d8921c6e23c626ef9f1c3ae0be473c95c68ffa012bc7ae55a87e2d6',
        'net.java.dev.jna:jna:0c8eb7acf67261656d79005191debaba3b6bf5dd60a43735a245429381dbecff',
        'org.freenetproject:freenet-ext:32f2b3d6beedf54137ea2f9a3ebef67666d769f0966b08cd17fd7db59ba4d79f',
    ]
}

def gitrev
task buildInfo {
    try {
        def cmd = "git describe --always --abbrev=4 --dirty"
        def proc = cmd.execute()
        gitrev = proc.text.trim()
    } catch (java.io.IOException e) {
        gitrev = "@unknown@"
    }
}

test {
	useJUnit()
}

application {
    mainClassName = 'plugins.Library.ui.TestInterface'
}


import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributes;

Date getMTime(String file) {
    return new Date(Files.readAttributes(Paths.get(file), BasicFileAttributes.class).lastModifiedTime().toMillis());
}

jar {
    manifest {
        attributes 'Plugin-Main-Class': 'plugins.Library.Main',
                   'Main-Class': 'plugins.Library.ui.TestInterface',
                   'Required-Node-Version': '1239',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': getMTime("src/main/java/plugins/Library/Version.java"),
                   'Built-JDK': System.getProperty('java.version')
    }
    from (configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    duplicatesStrategy = "exclude"
    archiveName = 'freenet-Library.jar'
}

def jars = []
gradle.addListener(new TaskExecutionListener() {
    void afterExecute(Task task, TaskState state) {
        if(task in AbstractArchiveTask) {
            jars << task.outputs.files.singleFile
        }
    }

    void beforeExecute(Task task) { }
})
gradle.addBuildListener(new BuildAdapter() {
    void buildFinished(BuildResult result) {
        if(jars) {
            def hash = {
                File file -> def sha256 = java.security.MessageDigest.getInstance('SHA-256')
                    file.eachByte(1024 * 4) { buffer, len -> sha256.update(buffer, 0, len) }
                    println "SHA-256 of ${file.name}: ${sha256.digest().encodeHex().toString()}"
            }

            jars.each { hash(it) }
        }
    }
})

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'org.freenetproject.plugins'
            artifactId "Library"
            version version
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://mvn.freenetproject.org/"
            credentials(AwsCredentials) {
                accessKey System.getenv('AWS_ACCESS_KEY_ID')
                secretKey System.getenv('AWS_SECRET_ACCESS_KEY')
            }
        }
    }
}

